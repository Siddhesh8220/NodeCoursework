const express = require("express");
const http = require("http");
const morgan = require("morgan");
const cors = require("cors");
const helmet = require("helmet");
//we dont need body parser

const hostname = "localhost";
const port = 3000;

const app = express();
app.use(helmet);
app.use(morgan("dev"));
app.use(cors);
// app.use(express.static(__dirname + "/public")); serving static http file
app.use(express.json());

//for all requests
app.all("/dishes", (req, res, next) => {
  res.statusCode = 200;
  res.setHeader("Content-Type", "text/palin");
  next();
});

//next will execute app.get
app.get("/dishes", (req, res, next) => {
  res.end("will send all dishes to you");
});

app.post("/dishes", (req, res, next) => {
  //post will receive some info
  //req.body will give data insisde re body
  res.end(
    "will add the dish: " +
      req.body.name +
      "with details: " +
      req.body.description
  );
});

app.put("/dishes", (req, res, next) => {
  res.statusCode = 403;
  res.end("put operation not supported on dishes");
});

app.delete("/dishes", (req, res, next) => {
  res.end("Deleting all dishes!");
});

//Adding suppot for /:dishId

app.get("/dishes/:dishId", (req, res, next) => {
  res.end("will send details of dish" + req.params.dishId + "to you");
});

app.post("/dishes/:dishId", (req, res, next) => {
  res.statusCode = 403;
  res.end("Post operation not supported on dishes " + req.params.dishId);
});

app.put("/dishes/:dishId", (req, res, next) => {
  res.write("Updating the dish: " + req.params.dishId);
  res.end(
    "will update the dish :" +
      req.body.name +
      " with details " +
      req.body.description
  );
});

app.delete("/dishes/:dishId", (req, res, next) => {
  res.end("Deleting dish: " + req.params.dishId);
});

app.use((req, res, next) => {
  //   console.log(req.headers); removed to check morgan
  res.statusCode = 200;
  res.setHeader("content-type", "text/html");
  res.end("<html><body>this is express server</body></html>");
});

const server = http.createServer(app);

server.listen(port, hostname, () => {
  console.log(`server running on port http://${hostname}:${port}`);
});
